#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ—Å—ã–ª–∫–æ–π –º–µ–¥–∏–∞
"""

import asyncio
import logging
from telegram import Bot
from telegram.error import TelegramError
from config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def test_media_access():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–∞–º"""
    bot = Bot(token=BOT_TOKEN)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ file_id (–Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ)
    test_file_ids = [
        # –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ä–µ–∞–ª—å–Ω—ã–µ file_id –∏–∑ –≤–∞—à–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        # "BQACAgIAAxkBAAIB..." # –ø—Ä–∏–º–µ—Ä
    ]
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–∞–º...")
    
    for i, file_id in enumerate(test_file_ids, 1):
        try:
            print(f"\nüìÅ –¢–µ—Å—Ç {i}: {file_id[:20]}...")
            file_info = await bot.get_file(file_id)
            if file_info:
                print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω: {file_info.file_id}")
                print(f"   üìè –†–∞–∑–º–µ—Ä: {file_info.file_size} –±–∞–π—Ç")
                print(f"   üîó URL: {file_info.file_path}")
            else:
                print(f"   ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω: file_info –ø—É—Å—Ç–æ–π")
        except TelegramError as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        except Exception as e:
            print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    await bot.close()

async def test_bot_info():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ"""
    bot = Bot(token=BOT_TOKEN)
    
    try:
        me = await bot.get_me()
        print(f"\nü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:")
        print(f"   –ò–º—è: {me.first_name}")
        print(f"   Username: @{me.username}")
        print(f"   ID: {me.id}")
        print(f"   –ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: {me.can_read_all_group_messages}")
        print(f"   –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç inline —Ä–µ–∂–∏–º: {me.supports_inline_queries}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {e}")
    
    await bot.close()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –º–µ–¥–∏–∞...")
    
    await test_bot_info()
    await test_media_access()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(main()) 