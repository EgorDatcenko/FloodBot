#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –±–æ—Ç–∞
"""

import sys
import traceback

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        from config import BOT_TOKEN, CATEGORIES
        print("‚úÖ config.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        print(f"   BOT_TOKEN: {'–ù–∞—Å—Ç—Ä–æ–µ–Ω' if BOT_TOKEN else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {len(CATEGORIES)}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ config.py: {e}")
        return False
    
    try:
        from database import Database
        print("‚úÖ database.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        db = Database()
        print("   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ database.py: {e}")
        return False
    
    try:
        from content_analyzer import ContentAnalyzer
        print("‚úÖ content_analyzer.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        analyzer = ContentAnalyzer()
        print("   –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ content_analyzer.py: {e}")
        return False
    
    try:
        from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
        from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes
        print("‚úÖ telegram –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ telegram: {e}")
        return False
    
    return True

def test_bot_creation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞...")
    
    try:
        from bot import ContentBot
        print("‚úÖ bot.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        bot = ContentBot()
        print("‚úÖ –ë–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞: {e}")
        print("–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Fitness Content Sorter Bot")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã
    if not test_imports():
        print("\n‚ùå –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
    if not test_bot_creation():
        print("\n‚ùå –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
        return
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
    print("üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É")

if __name__ == "__main__":
    main() 