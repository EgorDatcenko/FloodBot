#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –º–µ–¥–∏–∞ –∏ –ø–æ—Ä—è–¥–∫–∞ –ø–æ—Å—Ç–æ–≤
"""

from database import Database
from content_analyzer import ContentAnalyzer

def test_order_fix():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –ø–æ—Å—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –ø–æ—Å—Ç–æ–≤...")
    
    db = Database()
    analyzer = ContentAnalyzer()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Ä—è–¥–æ–∫ –ø–æ—Å—Ç–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
    categories = ['memes', 'challenges', 'power_results', 'sport_tips', 'exercises', 'flood', 'other']
    
    for category in categories:
        print(f"\nüìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {analyzer.get_category_name(category)}")
        posts = db.get_content_by_category(category, limit=5)
        
        if posts:
            print(f"   –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
            print("   –ü–æ—Ä—è–¥–æ–∫ –ø–æ—Å—Ç–æ–≤ (–ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è):")
            for i, post in enumerate(posts, 1):
                created_at = post.get('created_at', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                title = post.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')[:30]
                print(f"   {i}. {created_at} - {title}...")
        else:
            print("   –ü–æ—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

def test_media_fix():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–¥–∏–∞"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–¥–∏–∞...")
    
    db = Database()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã —Å –º–µ–¥–∏–∞
    posts_with_media = db.get_content_with_media(limit=10)
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ —Å –º–µ–¥–∏–∞: {len(posts_with_media)}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø—ã –º–µ–¥–∏–∞
    media_types = {}
    for post in posts_with_media:
        media_type = post.get('media_type')
        if media_type:
            media_types[media_type] = media_types.get(media_type, 0) + 1
    
    print("\nüì± –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –º–µ–¥–∏–∞:")
    for media_type, count in media_types.items():
        print(f"   ‚Ä¢ {media_type}: {count}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π:")
    message_ids = {}
    duplicates = 0
    
    for post in posts_with_media:
        message_id = post.get('message_id')
        if message_id in message_ids:
            duplicates += 1
            print(f"   ‚ùå –î—É–±–ª–∏—Ä—É—é—â–∏–π message_id: {message_id}")
        else:
            message_ids[message_id] = 1
    
    if duplicates == 0:
        print("   ‚úÖ –î—É–±–ª–∏—Ä—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    else:
        print(f"   ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π: {duplicates}")

def test_database_integrity():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    db = Database()
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_posts = db.get_total_posts_count()
    real_stats = db.get_real_stats()
    
    print(f"üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {total_posts}")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {len(real_stats)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—É–º–º–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ä–∞–≤–Ω–∞ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É
    sum_by_category = sum(real_stats.values())
    if sum_by_category == total_posts:
        print("   ‚úÖ –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö: OK")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏: {sum_by_category} != {total_posts}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ú–ï–î–ò–ê –ò –ü–û–†–Ø–î–ö–ê –ü–û–°–¢–û–í")
    print("=" * 60)
    
    test_order_fix()
    test_media_fix()
    test_database_integrity()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main() 