#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø
"""

import asyncio
import logging
from database import Database
from content_analyzer import ContentAnalyzer

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_media_groups():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø"""
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ë–†–ê–ë–û–¢–ö–ò –ú–ï–î–ò–ê-–ì–†–£–ü–ü")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    db = Database()
    analyzer = ContentAnalyzer()
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ post_media —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        import sqlite3
        with sqlite3.connect(db.db_path, timeout=30.0) as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='post_media'")
            table_exists = cursor.fetchone() is not None
        
        if table_exists:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ post_media —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ post_media –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–æ–Ω–∫—É media_group_id –≤ —Ç–∞–±–ª–∏—Ü–µ content
        cursor.execute("PRAGMA table_info(content)")
        columns = [column[1] for column in cursor.fetchall()]
        
        if 'media_group_id' in columns:
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ media_group_id —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ content")
        else:
            print("‚ùå –ö–æ–ª–æ–Ω–∫–∞ media_group_id –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ content")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞...")
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        class MockMessage:
            def __init__(self):
                self.media_group_id = "test_group_123"
                self.photo = [MockPhoto()]
                self.caption = "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø–æ–π"
        
        class MockPhoto:
            def __init__(self):
                self.file_id = "test_photo_file_id"
        
        mock_message = MockMessage()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º extract_media_info
        media_type, media_file_id = analyzer.extract_media_info(mock_message)
        print(f"‚úÖ extract_media_info: {media_type} - {media_file_id}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º extract_all_media_info
        all_media = analyzer.extract_all_media_info(mock_message)
        print(f"‚úÖ extract_all_media_info: {len(all_media)} –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤")
        for i, (m_type, m_id) in enumerate(all_media, 1):
            print(f"   {i}. {m_type}: {m_id}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø–æ–π
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø–æ–π...")
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø–æ–π
        success = db.add_content(
            message_id=999999,
            channel_id=-1001234567890,
            channel_username="test_channel",
            category="test",
            title="–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø–æ–π",
            text="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø",
            media_type="photo",
            media_file_id="test_photo_1",
            media_group_id="test_group_123"
        )
        
        if success:
            print("‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —Å –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø–æ–π –¥–æ–±–∞–≤–ª–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω
            content = db.get_content_by_media_group_id("test_group_123")
            if content:
                print(f"‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω –ø–æ media_group_id: {content['title']}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã
                media_files = db.get_post_media(content['id'])
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤: {len(media_files)}")
                for i, media in enumerate(media_files, 1):
                    print(f"   {i}. {media['media_type']}: {media['media_file_id']}")
            else:
                print("‚ùå –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ media_group_id")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø–æ–π")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏...")
    try:
        content_list = db.get_content_by_category("test", limit=10)
        if content_list:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(content_list)} –ø–æ—Å—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ test")
            for i, content in enumerate(content_list, 1):
                print(f"   {i}. {content['title']}")
                print(f"      –ú–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤: {len(content.get('media_files', []))}")
                for j, media in enumerate(content.get('media_files', []), 1):
                    print(f"         {j}. {media['media_type']}: {media['media_file_id']}")
        else:
            print("‚ùå –ü–æ—Å—Ç—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ test –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {e}")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø
    print("\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø...")
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ—Ç –∂–µ –∫–æ–Ω—Ç–µ–Ω—Ç —Å–Ω–æ–≤–∞
        success = db.add_content(
            message_id=999998,  # –î—Ä—É–≥–æ–π message_id, –Ω–æ —Ç–æ—Ç –∂–µ media_group_id
            channel_id=-1001234567890,
            channel_username="test_channel",
            category="test",
            title="–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç —Å –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø–æ–π",
            text="–≠—Ç–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç",
            media_type="photo",
            media_file_id="test_photo_2",
            media_group_id="test_group_123"  # –¢–æ—Ç –∂–µ media_group_id
        )
        
        if success:
            print("‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω (–æ–±–Ω–æ–≤–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π)")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω
            content = db.get_content_by_media_group_id("test_group_123")
            if content:
                print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç: {content['title']}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã
                media_files = db.get_post_media(content['id'])
                print(f"‚úÖ –í—Å–µ–≥–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {len(media_files)}")
                for i, media in enumerate(media_files, 1):
                    print(f"   {i}. {media['media_type']}: {media['media_file_id']}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")

if __name__ == "__main__":
    asyncio.run(test_media_groups()) 