#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import logging
from database import Database
from telegram import Bot
from telegram.error import TelegramError
from config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def check_media_in_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    db = Database()
    bot = Bot(token=BOT_TOKEN)
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å –º–µ–¥–∏–∞
    content_with_media = db.get_content_with_media()
    
    if not content_with_media:
        print("üìù –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π —Å –º–µ–¥–∏–∞")
        return
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(content_with_media)} –∑–∞–ø–∏—Å–µ–π —Å –º–µ–¥–∏–∞")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –º–µ–¥–∏–∞
    media_stats = {}
    available_count = 0
    unavailable_count = 0
    
    for item in content_with_media:
        media_type = item.get('media_type')
        media_file_id = item.get('media_file_id')
        message_id = item.get('message_id')
        title = item.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')[:50]
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if media_type:
            media_stats[media_type] = media_stats.get(media_type, 0) + 1
        
        print(f"\nüì± –ü–æ—Å—Ç {message_id}: {title}")
        print(f"   –¢–∏–ø –º–µ–¥–∏–∞: {media_type}")
        print(f"   File ID: {media_file_id[:30] if media_file_id else '–ù–µ—Ç'}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–µ–¥–∏–∞
        if media_file_id:
            try:
                file_info = await bot.get_file(media_file_id)
                if file_info and file_info.file_id:
                    print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω")
                    print(f"   üìè –†–∞–∑–º–µ—Ä: {file_info.file_size} –±–∞–π—Ç")
                    available_count += 1
                else:
                    print(f"   ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω (file_info –ø—É—Å—Ç–æ–π)")
                    unavailable_count += 1
            except TelegramError as e:
                print(f"   ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
                unavailable_count += 1
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
                unavailable_count += 1
        else:
            print(f"   ‚ö†Ô∏è File ID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            unavailable_count += 1
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π —Å –º–µ–¥–∏–∞: {len(content_with_media)}")
    print(f"   –î–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ–¥–∏–∞: {available_count}")
    print(f"   –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ–¥–∏–∞: {unavailable_count}")
    print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏: {(available_count/len(content_with_media)*100):.1f}%")
    
    print(f"\nüìÅ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –º–µ–¥–∏–∞:")
    for media_type, count in media_stats.items():
        print(f"   {media_type}: {count}")
    
    await bot.close()

async def test_specific_media():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤"""
    db = Database()
    bot = Bot(token=BOT_TOKEN)
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤...")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –º–µ–¥–∏–∞
    media_types = ['video', 'photo', 'animation', 'audio', 'document']
    
    for media_type in media_types:
        print(f"\nüìÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {media_type}:")
        content = db.get_content_by_media_type(media_type, limit=3)
        
        if not content:
            print(f"   –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π —Å —Ç–∏–ø–æ–º {media_type}")
            continue
        
        for item in content:
            media_file_id = item.get('media_file_id')
            message_id = item.get('message_id')
            
            if media_file_id:
                try:
                    file_info = await bot.get_file(media_file_id)
                    if file_info:
                        print(f"   ‚úÖ {message_id}: {media_file_id[:20]}... - –î–æ—Å—Ç—É–ø–µ–Ω")
                    else:
                        print(f"   ‚ùå {message_id}: {media_file_id[:20]}... - –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                except Exception as e:
                    print(f"   ‚ùå {message_id}: {media_file_id[:20]}... - –û—à–∏–±–∫–∞: {e}")
            else:
                print(f"   ‚ö†Ô∏è {message_id}: File ID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    
    await bot.close()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ–¥–∏–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    await check_media_in_database()
    await test_specific_media()
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    asyncio.run(main()) 